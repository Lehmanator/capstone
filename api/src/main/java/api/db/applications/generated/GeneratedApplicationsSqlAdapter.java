package api.db.applications.generated;

import api.db.applications.Applications;
import api.db.applications.ApplicationsImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.annotation.ExecuteBefore;
import com.speedment.common.injector.annotation.WithState;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.sql.SqlPersistenceComponent;
import com.speedment.runtime.core.component.sql.SqlStreamSupplierComponent;
import com.speedment.runtime.core.exception.SpeedmentException;
import java.sql.ResultSet;
import java.sql.SQLException;
import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link api.db.applications.Applications}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedApplicationsSqlAdapter {
    
    private final TableIdentifier<Applications> tableIdentifier;
    
    protected GeneratedApplicationsSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("capitalfun", "capitalfun", "applications");
    }
    
    @ExecuteBefore(RESOLVED)
    void installMethodName(@WithState(RESOLVED) SqlStreamSupplierComponent streamSupplierComponent,
            @WithState(RESOLVED) SqlPersistenceComponent persistenceComponent) {
        streamSupplierComponent.install(tableIdentifier, this::apply);
        persistenceComponent.install(tableIdentifier);
    }
    
    protected Applications apply(ResultSet resultSet) throws SpeedmentException {
        final Applications entity = createEntity();
        try {
            entity.setId(            resultSet.getInt(1)    );
            entity.setApplicantName( resultSet.getString(2) );
            entity.setAge(           resultSet.getInt(3)    );
            entity.setIncome(        resultSet.getInt(4)    );
            entity.setCreditScore(   resultSet.getInt(5)    );
            entity.setExpenses(      resultSet.getInt(6)    );
            entity.setApplicantId(   resultSet.getString(7) );
            entity.setUsername(      resultSet.getString(8) );
        } catch (final SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return entity;
    }
    
    protected ApplicationsImpl createEntity() {
        return new ApplicationsImpl();
    }
}